{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\unsung\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport Login from './Login';\nimport { auth } from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Payment from \"./Payment\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst promise = loadStripe('pk_test_51K92PbFjq4578bewnCkB7Nxmp5COR3G99RfdDJ9blZuh3pMALbzpRlYbGF0zhWaYWKY1Itw20jBmO45y03MkpyWT00n6Ez1Ti9');\n\nfunction App() {\n  _s();\n\n  const [{}, dispatch] = useStateValue();\n  useEffect(() => {\n    // will only run when app component loads...//kind of if statement in react\n    auth.onAuthStateChanged(authUser => {\n      console.log(\"the user is \", authUser);\n\n      if (authUser) {\n        //the user just logged in / user was log in\n        dispatch({\n          type: \"SET_USER\",\n          user: authUser\n        });\n      } else {\n        //the user is logged out\n        dispatch({\n          type: \"SET_USER\",\n          user: null\n        });\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/payment\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Elements, {\n            stripe: promise,\n            children: /*#__PURE__*/_jsxDEV(Payment, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ohM8dwolDBMMow3M5+4I1WxDlAA=\", false, function () {\n  return [useStateValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/REACT/unsung/src/App.js"],"names":["React","useEffect","Header","Home","Login","auth","useStateValue","BrowserRouter","Router","Switch","Route","Payment","loadStripe","Elements","promise","App","dispatch","onAuthStateChanged","authUser","console","log","type","user"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,QAAT,QAAyB,yBAAzB;;AACA,MAAMC,OAAO,GAAGF,UAAU,CAAE,6GAAF,CAA1B;;AAEA,SAASG,GAAT,GAAe;AAAA;;AAEb,QAAM,CAAC,EAAD,EAAKC,QAAL,IAAiBV,aAAa,EAApC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd;AACAI,IAAAA,IAAI,CAACY,kBAAL,CAAyBC,QAAD,IAAc;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,QAA5B;;AAEA,UAAIA,QAAJ,EAAc;AACZ;AACAF,QAAAA,QAAQ,CAAC;AACPK,UAAAA,IAAI,EAAE,UADC;AAEPC,UAAAA,IAAI,EAAEJ;AAFC,SAAD,CAAR;AAID,OAND,MAMO;AACL;AACAF,QAAAA,QAAQ,CAAC;AACPK,UAAAA,IAAI,EAAE,UADC;AAEPC,UAAAA,IAAI,EAAE;AAFC,SAAD,CAAR;AAID;AACF,KAhBD;AAiBD,GAnBQ,EAmBN,EAnBM,CAAT;AAoBA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAA,kCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,QAAD;AAAU,YAAA,MAAM,EAAER,OAAlB;AAAA,mCACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAUE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAA,kCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA9CQC,G;UAEgBT,a;;;KAFhBS,G;AAgDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport Login from './Login';\nimport { auth } from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Payment from \"./Payment\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nconst promise = loadStripe ('pk_test_51K92PbFjq4578bewnCkB7Nxmp5COR3G99RfdDJ9blZuh3pMALbzpRlYbGF0zhWaYWKY1Itw20jBmO45y03MkpyWT00n6Ez1Ti9');\n\nfunction App() {\n\n  const [{}, dispatch] = useStateValue();\n\n  useEffect(() => {\n    // will only run when app component loads...//kind of if statement in react\n    auth.onAuthStateChanged((authUser) => {\n      console.log(\"the user is \", authUser);\n\n      if (authUser) {\n        //the user just logged in / user was log in\n        dispatch({\n          type: \"SET_USER\",\n          user: authUser,\n        });\n      } else {\n        //the user is logged out\n        dispatch({\n          type: \"SET_USER\",\n          user: null,\n        });\n      }\n    });\n  }, []);\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/login\">\n            <Login/>\n          </Route>\n          <Route path=\"/payment\">\n            <Header/>\n            <Elements stripe={promise}>\n            <Payment/>\n            </Elements>\n          </Route>\n          <Route path=\"/\">\n            <Header />\n            <Home />\n          </Route>\n         \n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}